---
- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../database/vars

- block:
    - name: Add the mysql repository (yum)
      yum_repository:
        name: mysql-community
        description: "MySQL {{ mysql_version }} Community Server"
        baseurl: "{{ mysql_repo_url }}"
        state: present
        gpgcheck: yes
        gpgkey: "{{ mysql_repo_key }}"
      when: ansible_os_family|lower == "redhat"
  when: database == "mysql" and database_options.add_repo

- name: Install {{ database }} database packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ hostvars[inventory_hostname][database + '_packages'] | join(',') }}"

- block:
    - name: Configure mysql to listen on all interfaces
      ini_file:
        path: "{{ (database == 'mariadb') | ternary(mariadb_config_file, mysql_config_file) }}"
        create: no
        section: "mysqld"
        option: "bind-address"
        value: "*"
        no_extra_spaces: yes
        state: present
      notify: Restart {{ database }}

    - name: Set mysql max_connections
      ini_file:
        path: "{{ (database == 'mariadb') | ternary(mariadb_config_file, mysql_config_file) }}"
        create: no
        section: "mysqld"
        option: "max_connections"
        value: "{{ max_connections }}"
        no_extra_spaces: yes
        state: present
      notify: Restart {{ database }}
  when: database == "mysql" or database == "mariadb"

- meta: flush_handlers

- name: Make sure the {{ database }} service is started
  service:
    name: "{{ hostvars[inventory_hostname][database + '_service_name'] }}"
    state: started

- name: Make sure the {{ database }} service is enabled
  service:
    name: "{{ hostvars[inventory_hostname][database + '_service_name'] }}"
    enabled: yes
  ignore_errors: true

- name: Prepare the ambari database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.ambari_db_name }}"
    db_username: "{{ database_options.ambari_db_username }}"
    db_password: "{{ database_options.ambari_db_password }}"
    db_client_hosts: "{{ inventory_hostname }}"

- name: Prepare the hive database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.hive_db_name }}"
    db_username: "{{ database_options.hive_db_username }}"
    db_password: "{{ database_options.hive_db_password }}"
    db_client_hosts: "{{ hiveserver_hosts }}"
  when: hiveserver_hosts is defined and hiveserver_hosts|length > 0

- name: Prepare the oozie database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.oozie_db_name }}"
    db_username: "{{ database_options.oozie_db_username }}"
    db_password: "{{ database_options.oozie_db_password }}"
    db_client_hosts: "{{ oozie_hosts }}"
  when: oozie_hosts is defined and oozie_hosts|length > 0

- name: Prepare the druid database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.druid_db_name }}"
    db_username: "{{ database_options.druid_db_username }}"
    db_password: "{{ database_options.druid_db_password }}"
    db_client_hosts: "{{ druid_hosts }}"
    db_encoding: 'utf8'
  when: druid_hosts is defined and druid_hosts|length > 0

- name: Prepare the superset database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.superset_db_name }}"
    db_username: "{{ database_options.superset_db_username }}"
    db_password: "{{ database_options.superset_db_password }}"
    db_client_hosts: "{{ superset_hosts }}"
    db_encoding: 'utf8'
  when: superset_hosts is defined and superset_hosts|length > 0

- name: Prepare the ranger database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.rangeradmin_db_name }}"
    db_username: "{{ database_options.rangeradmin_db_username }}"
    db_password: "{{ database_options.rangeradmin_db_password }}"
    db_client_hosts: "{{ rangeradmin_hosts }}"
  when: rangeradmin_hosts is defined and rangeradmin_hosts|length > 0

- name: Prepare the rangerkms database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.rangerkms_db_name }}"
    db_username: "{{ database_options.rangerkms_db_username }}"
    db_password: "{{ database_options.rangerkms_db_password }}"
    db_client_hosts: "{{ rangerkms_hosts }}"
  when: rangerkms_hosts is defined and rangerkms_hosts|length > 0

- name: Prepare the registry database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.registry_db_name }}"
    db_username: "{{ database_options.registry_db_username }}"
    db_password: "{{ database_options.registry_db_password }}"
    db_client_hosts: "{{ registry_hosts }}"
  when: registry_hosts is defined and registry_hosts|length > 0

- name: Prepare the streamline database
  include_tasks: "{{ database | regex_replace('mariadb', 'mysql') }}_play.yml"
  vars:
    db_name: "{{ database_options.streamline_db_name }}"
    db_username: "{{ database_options.streamline_db_username }}"
    db_password: "{{ database_options.streamline_db_password }}"
    db_client_hosts: "{{ streamline_hosts }}"
  when: streamline_hosts is defined and streamline_hosts|length > 0
